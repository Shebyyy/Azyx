name: Notify Release

on:
  workflow_run:
    workflows:
      - "Build and Release Azyx" # Name of the triggering workflow
    types:
      - completed
  workflow_dispatch: # Allow manual triggering of this workflow
  
jobs:
  notify:
    #if: ${{ github.event.workflow_run.conclusion == 'success' }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'

      - name: Install jq
        run: sudo apt-get install -y jq

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install requests jq
          
      - name: Fetch Repository Tags by Date and Time
        id: fetch_tags
        run: |
          # Fetch tags from the GitHub repository
          curl -s "https://api.github.com/repos/Shebyyy/Azyx/tags" -o tags.json
          TAGS=$(jq -r '.[].name' tags.json)

          declare -a TAGS_WITH_DATES=()

          for TAG in $TAGS; do
          # Fetch tag reference details
          TAG_DETAILS=$(curl -s "https://api.github.com/repos/Shebyyy/Azyx/git/refs/tags/$TAG")
          OBJECT_URL=$(echo "$TAG_DETAILS" | jq -r '.object.url // empty')

          if [ -n "$OBJECT_URL" ]; then
          # Fetch object details for date
          OBJECT_DETAILS=$(curl -s "$OBJECT_URL")
          DATE=$(echo "$OBJECT_DETAILS" | jq -r '.tagger.date // .committer.date // empty')

          if [ -n "$DATE" ]; then
          # Append date and tag pair
          TAGS_WITH_DATES+=("$DATE $TAG")
          else
          echo "No date found for tag $TAG"
          fi
          else
          echo "No object URL found for tag $TAG"
          fi
          done

          # Debugging: Print unsorted tags
          echo "Unsorted tags with dates:"
          printf "%s\n" "${TAGS_WITH_DATES[@]}"

          # Find the tag with the latest date (no sorting)
          LATEST_TAG=""
          LATEST_DATE=""

          for TAG_DATE in "${TAGS_WITH_DATES[@]}"; do
          TAG_DATE_TIME=$(echo "$TAG_DATE" | awk '{print $1}')
          TAG_NAME=$(echo "$TAG_DATE" | awk '{print $2}')

          if [[ -z "$LATEST_DATE" || "$TAG_DATE_TIME" > "$LATEST_DATE" ]]; then
          LATEST_DATE="$TAG_DATE_TIME"
          LATEST_TAG="$TAG_NAME"
          fi
          done

          # Output the latest tag found
          echo "The selected latest tag is: $LATEST_TAG"
          echo "LATEST_TAG=$LATEST_TAG" >> $GITHUB_ENV
          
      - name: Use the Latest Tag
        run: |
         echo "The latest tag is: ${{ env.LATEST_TAG }}"
