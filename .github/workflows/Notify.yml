name: Notify Release

on:
  workflow_run:
    workflows:
      - "Build and Release Azyx" # Name of the triggering workflow
    types:
      - completed
  workflow_dispatch: # Allow manual triggering of this workflow
  
jobs:
  notify:
    #if: ${{ github.event.workflow_run.conclusion == 'success' }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'

      - name: Install jq
        run: sudo apt-get install -y jq

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install requests jq
          
      - name: Fetch Repository Tags by Date and Time
        id: fetch_tags
        run: |
          # Fetch tags from the GitHub repository
          curl -s "https://api.github.com/repos/Shebyyy/Azyx/tags" -o tags.json
          TAGS=$(jq -r '.[].name' tags.json)

          declare -a TAGS_WITH_DATES=()

          for TAG in $TAGS; do
            # Fetch tag reference details
            TAG_DETAILS=$(curl -s "https://api.github.com/repos/Shebyyy/Azyx/git/refs/tags/$TAG")
            OBJECT_URL=$(echo "$TAG_DETAILS" | jq -r '.object.url // empty')

            if [ -n "$OBJECT_URL" ]; then
              # Fetch object details for date
              OBJECT_DETAILS=$(curl -s "$OBJECT_URL")
              DATE=$(echo "$OBJECT_DETAILS" | jq -r '.tagger.date // .committer.date // empty')

              if [ -n "$DATE" ]; then
                # Convert date to desired format: DD-MM-YYYY hh:mm:ss
                FORMATTED_DATE=$(date -d "$DATE" +"%d-%m-%Y %H:%M:%S")
                TAGS_WITH_DATES+=("$FORMATTED_DATE $TAG")
              else
                echo "No date found for tag $TAG"
              fi
            else
              echo "No object URL found for tag $TAG"
            fi
          done

          # Debugging: Print unsorted tags with formatted dates
          echo "Unsorted tags with formatted dates:"
          printf "%s\n" "${TAGS_WITH_DATES[@]}"

          # Sort by formatted date
          SORTED_TAGS=$(printf "%s\n" "${TAGS_WITH_DATES[@]}" | sort)

          # Debugging: Print sorted tags
          echo "Sorted tags with formatted dates:"
          echo "$SORTED_TAGS"

          # Get the latest tag from the sorted list
          LATEST_TAG=$(echo "$SORTED_TAGS" | tail -n 1 | awk '{print $3}')
          echo "The selected latest tag is: $LATEST_TAG"
          echo "LATEST_TAG=$LATEST_TAG" >> $GITHUB_ENV

      - name: Use the Latest Tag
        run: |
         echo "The latest tag is: ${{ env.LATEST_TAG }}"
        
